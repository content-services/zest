/*
Pulp 3 API

Testing DistributionsAptApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package zest

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/content-services/zest/packages/pulpGoBinding"
)

func Test_zest_DistributionsAptApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test DistributionsAptApiService DistributionsDebAptCreate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.DistributionsAptApi.DistributionsDebAptCreate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DistributionsAptApiService DistributionsDebAptDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var debAptDistributionHref string

		resp, httpRes, err := apiClient.DistributionsAptApi.DistributionsDebAptDelete(context.Background(), debAptDistributionHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DistributionsAptApiService DistributionsDebAptList", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.DistributionsAptApi.DistributionsDebAptList(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DistributionsAptApiService DistributionsDebAptPartialUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var debAptDistributionHref string

		resp, httpRes, err := apiClient.DistributionsAptApi.DistributionsDebAptPartialUpdate(context.Background(), debAptDistributionHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DistributionsAptApiService DistributionsDebAptRead", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var debAptDistributionHref string

		resp, httpRes, err := apiClient.DistributionsAptApi.DistributionsDebAptRead(context.Background(), debAptDistributionHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DistributionsAptApiService DistributionsDebAptUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var debAptDistributionHref string

		resp, httpRes, err := apiClient.DistributionsAptApi.DistributionsDebAptUpdate(context.Background(), debAptDistributionHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
