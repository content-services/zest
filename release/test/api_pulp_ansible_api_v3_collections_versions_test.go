/*
Pulp 3 API

Testing PulpAnsibleApiV3CollectionsVersionsApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package zest

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/content-services/zest/v3/release"
)

func Test_zest_PulpAnsibleApiV3CollectionsVersionsApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test PulpAnsibleApiV3CollectionsVersionsApiService PulpAnsibleGalaxyApiV3CollectionsVersionsDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var name string
		var namespace string
		var path string
		var version string

		resp, httpRes, err := apiClient.PulpAnsibleApiV3CollectionsVersionsApi.PulpAnsibleGalaxyApiV3CollectionsVersionsDelete(context.Background(), name, namespace, path, version).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PulpAnsibleApiV3CollectionsVersionsApiService PulpAnsibleGalaxyApiV3CollectionsVersionsList", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var name string
		var namespace string
		var path string

		resp, httpRes, err := apiClient.PulpAnsibleApiV3CollectionsVersionsApi.PulpAnsibleGalaxyApiV3CollectionsVersionsList(context.Background(), name, namespace, path).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PulpAnsibleApiV3CollectionsVersionsApiService PulpAnsibleGalaxyApiV3CollectionsVersionsRead", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var name string
		var namespace string
		var path string
		var version string

		resp, httpRes, err := apiClient.PulpAnsibleApiV3CollectionsVersionsApi.PulpAnsibleGalaxyApiV3CollectionsVersionsRead(context.Background(), name, namespace, path, version).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
