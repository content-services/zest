/*
Pulp 3 API

Testing ContentguardsCompositeAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package zest

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/content-services/zest/release/v2023"
)

func Test_zest_ContentguardsCompositeAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ContentguardsCompositeAPIService ContentguardsCoreCompositeAddRole", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var compositeContentGuardHref string

		resp, httpRes, err := apiClient.ContentguardsCompositeAPI.ContentguardsCoreCompositeAddRole(context.Background(), compositeContentGuardHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContentguardsCompositeAPIService ContentguardsCoreCompositeCreate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pulpDomain string

		resp, httpRes, err := apiClient.ContentguardsCompositeAPI.ContentguardsCoreCompositeCreate(context.Background(), pulpDomain).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContentguardsCompositeAPIService ContentguardsCoreCompositeDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var compositeContentGuardHref string

		httpRes, err := apiClient.ContentguardsCompositeAPI.ContentguardsCoreCompositeDelete(context.Background(), compositeContentGuardHref).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContentguardsCompositeAPIService ContentguardsCoreCompositeList", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var pulpDomain string

		resp, httpRes, err := apiClient.ContentguardsCompositeAPI.ContentguardsCoreCompositeList(context.Background(), pulpDomain).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContentguardsCompositeAPIService ContentguardsCoreCompositeListRoles", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var compositeContentGuardHref string

		resp, httpRes, err := apiClient.ContentguardsCompositeAPI.ContentguardsCoreCompositeListRoles(context.Background(), compositeContentGuardHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContentguardsCompositeAPIService ContentguardsCoreCompositeMyPermissions", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var compositeContentGuardHref string

		resp, httpRes, err := apiClient.ContentguardsCompositeAPI.ContentguardsCoreCompositeMyPermissions(context.Background(), compositeContentGuardHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContentguardsCompositeAPIService ContentguardsCoreCompositePartialUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var compositeContentGuardHref string

		resp, httpRes, err := apiClient.ContentguardsCompositeAPI.ContentguardsCoreCompositePartialUpdate(context.Background(), compositeContentGuardHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContentguardsCompositeAPIService ContentguardsCoreCompositeRead", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var compositeContentGuardHref string

		resp, httpRes, err := apiClient.ContentguardsCompositeAPI.ContentguardsCoreCompositeRead(context.Background(), compositeContentGuardHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContentguardsCompositeAPIService ContentguardsCoreCompositeRemoveRole", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var compositeContentGuardHref string

		resp, httpRes, err := apiClient.ContentguardsCompositeAPI.ContentguardsCoreCompositeRemoveRole(context.Background(), compositeContentGuardHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContentguardsCompositeAPIService ContentguardsCoreCompositeUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var compositeContentGuardHref string

		resp, httpRes, err := apiClient.ContentguardsCompositeAPI.ContentguardsCoreCompositeUpdate(context.Background(), compositeContentGuardHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
