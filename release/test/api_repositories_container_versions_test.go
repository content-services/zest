/*
Pulp 3 API

Testing RepositoriesContainerVersionsApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package zest/release/v3

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/content-services/zest/release/v3"
)

func Test_zest/release/v3_RepositoriesContainerVersionsApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test RepositoriesContainerVersionsApiService RepositoriesContainerContainerVersionsDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var containerContainerRepositoryVersionHref string

		resp, httpRes, err := apiClient.RepositoriesContainerVersionsApi.RepositoriesContainerContainerVersionsDelete(context.Background(), containerContainerRepositoryVersionHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RepositoriesContainerVersionsApiService RepositoriesContainerContainerVersionsList", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var containerContainerRepositoryHref string

		resp, httpRes, err := apiClient.RepositoriesContainerVersionsApi.RepositoriesContainerContainerVersionsList(context.Background(), containerContainerRepositoryHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RepositoriesContainerVersionsApiService RepositoriesContainerContainerVersionsRead", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var containerContainerRepositoryVersionHref string

		resp, httpRes, err := apiClient.RepositoriesContainerVersionsApi.RepositoriesContainerContainerVersionsRead(context.Background(), containerContainerRepositoryVersionHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RepositoriesContainerVersionsApiService RepositoriesContainerContainerVersionsRepair", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var containerContainerRepositoryVersionHref string

		resp, httpRes, err := apiClient.RepositoriesContainerVersionsApi.RepositoriesContainerContainerVersionsRepair(context.Background(), containerContainerRepositoryVersionHref).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
