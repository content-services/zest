/*
Pulp 3 API

Fetch, Upload, Organize, and Distribute Software Packages

API version: v3
Contact: pulp-list@redhat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zest

import (
	"encoding/json"
	"fmt"
)

// checks if the NestedOpenPGPUserAttribute type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NestedOpenPGPUserAttribute{}

// NestedOpenPGPUserAttribute Base serializer for use with [pulpcore.app.models.Model][]This ensures that all Serializers provide values for the 'pulp_href` field.The class provides a default for the ``ref_name`` attribute in theModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitionsof plugins are namespaced properly.
type NestedOpenPGPUserAttribute struct {
	Sha256 string `json:"sha256"`
	AdditionalProperties map[string]interface{}
}

type _NestedOpenPGPUserAttribute NestedOpenPGPUserAttribute

// NewNestedOpenPGPUserAttribute instantiates a new NestedOpenPGPUserAttribute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNestedOpenPGPUserAttribute(sha256 string) *NestedOpenPGPUserAttribute {
	this := NestedOpenPGPUserAttribute{}
	this.Sha256 = sha256
	return &this
}

// NewNestedOpenPGPUserAttributeWithDefaults instantiates a new NestedOpenPGPUserAttribute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNestedOpenPGPUserAttributeWithDefaults() *NestedOpenPGPUserAttribute {
	this := NestedOpenPGPUserAttribute{}
	return &this
}

// GetSha256 returns the Sha256 field value
func (o *NestedOpenPGPUserAttribute) GetSha256() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sha256
}

// GetSha256Ok returns a tuple with the Sha256 field value
// and a boolean to check if the value has been set.
func (o *NestedOpenPGPUserAttribute) GetSha256Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sha256, true
}

// SetSha256 sets field value
func (o *NestedOpenPGPUserAttribute) SetSha256(v string) {
	o.Sha256 = v
}

func (o NestedOpenPGPUserAttribute) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NestedOpenPGPUserAttribute) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sha256"] = o.Sha256

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *NestedOpenPGPUserAttribute) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sha256",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNestedOpenPGPUserAttribute := _NestedOpenPGPUserAttribute{}

	err = json.Unmarshal(data, &varNestedOpenPGPUserAttribute)

	if err != nil {
		return err
	}

	*o = NestedOpenPGPUserAttribute(varNestedOpenPGPUserAttribute)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "sha256")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableNestedOpenPGPUserAttribute struct {
	value *NestedOpenPGPUserAttribute
	isSet bool
}

func (v NullableNestedOpenPGPUserAttribute) Get() *NestedOpenPGPUserAttribute {
	return v.value
}

func (v *NullableNestedOpenPGPUserAttribute) Set(val *NestedOpenPGPUserAttribute) {
	v.value = val
	v.isSet = true
}

func (v NullableNestedOpenPGPUserAttribute) IsSet() bool {
	return v.isSet
}

func (v *NullableNestedOpenPGPUserAttribute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNestedOpenPGPUserAttribute(val *NestedOpenPGPUserAttribute) *NullableNestedOpenPGPUserAttribute {
	return &NullableNestedOpenPGPUserAttribute{value: val, isSet: true}
}

func (v NullableNestedOpenPGPUserAttribute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNestedOpenPGPUserAttribute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


