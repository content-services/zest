/*
Pulp 3 API

Fetch, Upload, Organize, and Distribute Software Packages

API version: v3
Contact: pulp-list@redhat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zest

import (
	"encoding/json"
	"time"
)

// checks if the ApiAppStatusResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiAppStatusResponse{}

// ApiAppStatusResponse Base serializer for use with :class:`pulpcore.app.models.Model`  This ensures that all Serializers provide values for the 'pulp_href` field.  The class provides a default for the ``ref_name`` attribute in the ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions of plugins are namespaced properly.
type ApiAppStatusResponse struct {
	// The name of the worker.
	Name *string `json:"name,omitempty"`
	// Timestamp of the last time the worker talked to the service.
	LastHeartbeat *time.Time `json:"last_heartbeat,omitempty"`
	// Versions of the components installed.
	Versions *map[string]string `json:"versions,omitempty"`
}

// NewApiAppStatusResponse instantiates a new ApiAppStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAppStatusResponse() *ApiAppStatusResponse {
	this := ApiAppStatusResponse{}
	return &this
}

// NewApiAppStatusResponseWithDefaults instantiates a new ApiAppStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAppStatusResponseWithDefaults() *ApiAppStatusResponse {
	this := ApiAppStatusResponse{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiAppStatusResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAppStatusResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiAppStatusResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiAppStatusResponse) SetName(v string) {
	o.Name = &v
}

// GetLastHeartbeat returns the LastHeartbeat field value if set, zero value otherwise.
func (o *ApiAppStatusResponse) GetLastHeartbeat() time.Time {
	if o == nil || IsNil(o.LastHeartbeat) {
		var ret time.Time
		return ret
	}
	return *o.LastHeartbeat
}

// GetLastHeartbeatOk returns a tuple with the LastHeartbeat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAppStatusResponse) GetLastHeartbeatOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastHeartbeat) {
		return nil, false
	}
	return o.LastHeartbeat, true
}

// HasLastHeartbeat returns a boolean if a field has been set.
func (o *ApiAppStatusResponse) HasLastHeartbeat() bool {
	if o != nil && !IsNil(o.LastHeartbeat) {
		return true
	}

	return false
}

// SetLastHeartbeat gets a reference to the given time.Time and assigns it to the LastHeartbeat field.
func (o *ApiAppStatusResponse) SetLastHeartbeat(v time.Time) {
	o.LastHeartbeat = &v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *ApiAppStatusResponse) GetVersions() map[string]string {
	if o == nil || IsNil(o.Versions) {
		var ret map[string]string
		return ret
	}
	return *o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAppStatusResponse) GetVersionsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Versions) {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *ApiAppStatusResponse) HasVersions() bool {
	if o != nil && !IsNil(o.Versions) {
		return true
	}

	return false
}

// SetVersions gets a reference to the given map[string]string and assigns it to the Versions field.
func (o *ApiAppStatusResponse) SetVersions(v map[string]string) {
	o.Versions = &v
}

func (o ApiAppStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiAppStatusResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.LastHeartbeat) {
		toSerialize["last_heartbeat"] = o.LastHeartbeat
	}
	if !IsNil(o.Versions) {
		toSerialize["versions"] = o.Versions
	}
	return toSerialize, nil
}

type NullableApiAppStatusResponse struct {
	value *ApiAppStatusResponse
	isSet bool
}

func (v NullableApiAppStatusResponse) Get() *ApiAppStatusResponse {
	return v.value
}

func (v *NullableApiAppStatusResponse) Set(val *ApiAppStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAppStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAppStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAppStatusResponse(val *ApiAppStatusResponse) *NullableApiAppStatusResponse {
	return &NullableApiAppStatusResponse{value: val, isSet: true}
}

func (v NullableApiAppStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAppStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


