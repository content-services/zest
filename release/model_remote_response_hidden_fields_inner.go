/*
Pulp 3 API

Fetch, Upload, Organize, and Distribute Software Packages

API version: v3
Contact: pulp-list@redhat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zest

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RemoteResponseHiddenFieldsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoteResponseHiddenFieldsInner{}

// RemoteResponseHiddenFieldsInner struct for RemoteResponseHiddenFieldsInner
type RemoteResponseHiddenFieldsInner struct {
	Name string `json:"name"`
	IsSet bool `json:"is_set"`
}

type _RemoteResponseHiddenFieldsInner RemoteResponseHiddenFieldsInner

// NewRemoteResponseHiddenFieldsInner instantiates a new RemoteResponseHiddenFieldsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoteResponseHiddenFieldsInner(name string, isSet bool) *RemoteResponseHiddenFieldsInner {
	this := RemoteResponseHiddenFieldsInner{}
	this.Name = name
	this.IsSet = isSet
	return &this
}

// NewRemoteResponseHiddenFieldsInnerWithDefaults instantiates a new RemoteResponseHiddenFieldsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoteResponseHiddenFieldsInnerWithDefaults() *RemoteResponseHiddenFieldsInner {
	this := RemoteResponseHiddenFieldsInner{}
	return &this
}

// GetName returns the Name field value
func (o *RemoteResponseHiddenFieldsInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RemoteResponseHiddenFieldsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RemoteResponseHiddenFieldsInner) SetName(v string) {
	o.Name = v
}

// GetIsSet returns the IsSet field value
func (o *RemoteResponseHiddenFieldsInner) GetIsSet() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsSet
}

// GetIsSetOk returns a tuple with the IsSet field value
// and a boolean to check if the value has been set.
func (o *RemoteResponseHiddenFieldsInner) GetIsSetOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsSet, true
}

// SetIsSet sets field value
func (o *RemoteResponseHiddenFieldsInner) SetIsSet(v bool) {
	o.IsSet = v
}

func (o RemoteResponseHiddenFieldsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoteResponseHiddenFieldsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["is_set"] = o.IsSet
	return toSerialize, nil
}

func (o *RemoteResponseHiddenFieldsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"is_set",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRemoteResponseHiddenFieldsInner := _RemoteResponseHiddenFieldsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRemoteResponseHiddenFieldsInner)

	if err != nil {
		return err
	}

	*o = RemoteResponseHiddenFieldsInner(varRemoteResponseHiddenFieldsInner)

	return err
}

type NullableRemoteResponseHiddenFieldsInner struct {
	value *RemoteResponseHiddenFieldsInner
	isSet bool
}

func (v NullableRemoteResponseHiddenFieldsInner) Get() *RemoteResponseHiddenFieldsInner {
	return v.value
}

func (v *NullableRemoteResponseHiddenFieldsInner) Set(val *RemoteResponseHiddenFieldsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoteResponseHiddenFieldsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoteResponseHiddenFieldsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoteResponseHiddenFieldsInner(val *RemoteResponseHiddenFieldsInner) *NullableRemoteResponseHiddenFieldsInner {
	return &NullableRemoteResponseHiddenFieldsInner{value: val, isSet: true}
}

func (v NullableRemoteResponseHiddenFieldsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoteResponseHiddenFieldsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


