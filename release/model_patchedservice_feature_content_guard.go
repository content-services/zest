/*
Pulp 3 API

Fetch, Upload, Organize, and Distribute Software Packages

API version: v3
Contact: pulp-list@redhat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package zest

import (
	"encoding/json"
)

// checks if the PatchedserviceFeatureContentGuard type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedserviceFeatureContentGuard{}

// PatchedserviceFeatureContentGuard A serializer for FeatureContentGuard.
type PatchedserviceFeatureContentGuard struct {
	// The unique name.
	Name *string `json:"name,omitempty"`
	// An optional description.
	Description NullableString `json:"description,omitempty"`
	HeaderName *string `json:"header_name,omitempty"`
	JqFilter NullableString `json:"jq_filter,omitempty"`
	// The list of features required to access the content.
	Features []string `json:"features,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedserviceFeatureContentGuard PatchedserviceFeatureContentGuard

// NewPatchedserviceFeatureContentGuard instantiates a new PatchedserviceFeatureContentGuard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedserviceFeatureContentGuard() *PatchedserviceFeatureContentGuard {
	this := PatchedserviceFeatureContentGuard{}
	return &this
}

// NewPatchedserviceFeatureContentGuardWithDefaults instantiates a new PatchedserviceFeatureContentGuard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedserviceFeatureContentGuardWithDefaults() *PatchedserviceFeatureContentGuard {
	this := PatchedserviceFeatureContentGuard{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedserviceFeatureContentGuard) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedserviceFeatureContentGuard) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedserviceFeatureContentGuard) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedserviceFeatureContentGuard) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedserviceFeatureContentGuard) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedserviceFeatureContentGuard) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *PatchedserviceFeatureContentGuard) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *PatchedserviceFeatureContentGuard) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *PatchedserviceFeatureContentGuard) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *PatchedserviceFeatureContentGuard) UnsetDescription() {
	o.Description.Unset()
}

// GetHeaderName returns the HeaderName field value if set, zero value otherwise.
func (o *PatchedserviceFeatureContentGuard) GetHeaderName() string {
	if o == nil || IsNil(o.HeaderName) {
		var ret string
		return ret
	}
	return *o.HeaderName
}

// GetHeaderNameOk returns a tuple with the HeaderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedserviceFeatureContentGuard) GetHeaderNameOk() (*string, bool) {
	if o == nil || IsNil(o.HeaderName) {
		return nil, false
	}
	return o.HeaderName, true
}

// HasHeaderName returns a boolean if a field has been set.
func (o *PatchedserviceFeatureContentGuard) HasHeaderName() bool {
	if o != nil && !IsNil(o.HeaderName) {
		return true
	}

	return false
}

// SetHeaderName gets a reference to the given string and assigns it to the HeaderName field.
func (o *PatchedserviceFeatureContentGuard) SetHeaderName(v string) {
	o.HeaderName = &v
}

// GetJqFilter returns the JqFilter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedserviceFeatureContentGuard) GetJqFilter() string {
	if o == nil || IsNil(o.JqFilter.Get()) {
		var ret string
		return ret
	}
	return *o.JqFilter.Get()
}

// GetJqFilterOk returns a tuple with the JqFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedserviceFeatureContentGuard) GetJqFilterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JqFilter.Get(), o.JqFilter.IsSet()
}

// HasJqFilter returns a boolean if a field has been set.
func (o *PatchedserviceFeatureContentGuard) HasJqFilter() bool {
	if o != nil && o.JqFilter.IsSet() {
		return true
	}

	return false
}

// SetJqFilter gets a reference to the given NullableString and assigns it to the JqFilter field.
func (o *PatchedserviceFeatureContentGuard) SetJqFilter(v string) {
	o.JqFilter.Set(&v)
}
// SetJqFilterNil sets the value for JqFilter to be an explicit nil
func (o *PatchedserviceFeatureContentGuard) SetJqFilterNil() {
	o.JqFilter.Set(nil)
}

// UnsetJqFilter ensures that no value is present for JqFilter, not even an explicit nil
func (o *PatchedserviceFeatureContentGuard) UnsetJqFilter() {
	o.JqFilter.Unset()
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *PatchedserviceFeatureContentGuard) GetFeatures() []string {
	if o == nil || IsNil(o.Features) {
		var ret []string
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedserviceFeatureContentGuard) GetFeaturesOk() ([]string, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *PatchedserviceFeatureContentGuard) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []string and assigns it to the Features field.
func (o *PatchedserviceFeatureContentGuard) SetFeatures(v []string) {
	o.Features = v
}

func (o PatchedserviceFeatureContentGuard) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedserviceFeatureContentGuard) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.HeaderName) {
		toSerialize["header_name"] = o.HeaderName
	}
	if o.JqFilter.IsSet() {
		toSerialize["jq_filter"] = o.JqFilter.Get()
	}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedserviceFeatureContentGuard) UnmarshalJSON(data []byte) (err error) {
	varPatchedserviceFeatureContentGuard := _PatchedserviceFeatureContentGuard{}

	err = json.Unmarshal(data, &varPatchedserviceFeatureContentGuard)

	if err != nil {
		return err
	}

	*o = PatchedserviceFeatureContentGuard(varPatchedserviceFeatureContentGuard)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "header_name")
		delete(additionalProperties, "jq_filter")
		delete(additionalProperties, "features")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedserviceFeatureContentGuard struct {
	value *PatchedserviceFeatureContentGuard
	isSet bool
}

func (v NullablePatchedserviceFeatureContentGuard) Get() *PatchedserviceFeatureContentGuard {
	return v.value
}

func (v *NullablePatchedserviceFeatureContentGuard) Set(val *PatchedserviceFeatureContentGuard) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedserviceFeatureContentGuard) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedserviceFeatureContentGuard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedserviceFeatureContentGuard(val *PatchedserviceFeatureContentGuard) *NullablePatchedserviceFeatureContentGuard {
	return &NullablePatchedserviceFeatureContentGuard{value: val, isSet: true}
}

func (v NullablePatchedserviceFeatureContentGuard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedserviceFeatureContentGuard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


